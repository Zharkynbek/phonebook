{"version":3,"sources":["components/Phonebook/PhonebookForm.js","components/Phonebook/PhonebookList.js","helpers/filterContacts.js","components/Phonebook/PhonebookFilter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["PhonebookForm","onAddContact","onChangeNumber","onChangeName","name","number","action","onSubmit","htmlFor","onInput","e","target","value","type","pattern","title","required","PhonebookList","contacts","onDeleteContacts","map","id","onClick","filterContacts","filter","contact","toLowerCase","includes","trim","PhonebookFilter","filterName","onChangeFilter","className","initialState","Phonebook","useState","state","setState","filteredContacts","preventDefault","shortid","generate","prev","JSON","parse","localStorage","getItem","setItem","stringify","contactIt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d02b1bc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst PhonebookForm = ({ onAddContact, onChangeNumber, onChangeName, name, number }) => {\r\n  return (\r\n    <div>\r\n      <form action=\"submit\" onSubmit={onAddContact}>\r\n        <label htmlFor=\"\">\r\n          <p>enter name</p>\r\n          <input\r\n            onInput={(e) => onChangeName(e.target.value)}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>enter phone number</p>\r\n          <input\r\n            onInput={(e) => onChangeNumber(e.target.value)}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button>Add Contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhonebookForm;\r\n","import React from \"react\"\r\n\r\nconst PhonebookList = ({ contacts, onDeleteContacts }) => (\r\n  <ul>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id}>\r\n        <p>{name}</p>\r\n        <p>{number}</p>\r\n        <button onClick={() => onDeleteContacts(id)}>Delete</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default PhonebookList;","const filterContacts = (contacts, filter) => {\r\n    return contacts.filter(contact => {\r\n        return contact.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n    })\r\n}\r\n\r\nexport default filterContacts;","import React from \"react\"\r\n\r\n\r\nconst PhonebookFilter = ({ filterName, onChangeFilter }) => {\r\n  return (\r\n    <>\r\n    <div className=\"PhonebookFilter\">\r\n      <label>\r\n        <p>filter contacts</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          id=\"\"\r\n          value={filterName}\r\n          onInput={onChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n    <h3>Contacts</h3>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default PhonebookFilter;","import React, {useState, useEffect} from \"react\"\r\nimport shortid from \"shortid\";\r\nimport PhonebookForm from \"./PhonebookForm\";\r\nimport PhonebookList from \"./PhonebookList\"\r\nimport filterContacts from \"../../helpers/filterContacts\"\r\nimport PhonebookFilter from \"./PhonebookFilter\"\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n    filter: \"\",\r\n    contacts: [],\r\n};\r\n  \r\nfunction Phonebook() {\r\n  \r\n  const [state, setState] = useState(initialState)\r\n  // useEffect(() => {\r\n  //   setState((prev) => ({\r\n  //     ...prev,\r\n  //     contacts: localStorage.getItem(\"contacts\")\r\n  //   }))\r\n  // }, [state.contacts])\r\n  const reset = () => {\r\n    setState((prev)=> ({ ...prev, name: \"\", number: \"\" }));\r\n  };\r\n\r\n   const handleAddContact = (e) => {\r\n     e.preventDefault();\r\n     const { name, number } = state;\r\n     const contact =  { name, number, id: shortid.generate() }\r\n     setState((prev) => ({\r\n       ...prev,\r\n       contacts: [...prev.contacts, contact],\r\n     }));\r\n     const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n     contacts !== null\r\n       ? localStorage.setItem(\r\n           \"contacts\",\r\n           JSON.stringify([...contacts, contact])\r\n         )\r\n       : localStorage.setItem(\r\n           \"contacts\",\r\n           JSON.stringify([contact])\r\n         );\r\n     reset();\r\n   };\r\n\r\n  const deleteContacts = (contactIt) => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      contacts: prev.contacts.filter(\r\n        (contact) => contact.id !== contactIt\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const handleChangeName = (name) => {\r\n    setState((prev)=>({...prev, name }));\r\n  };\r\n\r\n  const handleChangeNumber = (number) => {\r\n    setState((prev)=>({...prev, number }));\r\n  };\r\n\r\n  const handleChangeFilter = ({ target: { name, value } }) => {\r\n    setState((prev)=>({...prev, [name]: value }));\r\n  };\r\n\r\n    const filteredContacts = filterContacts(\r\n      state.contacts,\r\n      state.filter\r\n    );\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <PhonebookForm\r\n          onAddContact={handleAddContact}\r\n          onChangeNumber={handleChangeNumber}\r\n          onChangeName={handleChangeName}\r\n          name={state.name}\r\n          number={state.number}\r\n        />\r\n        <PhonebookFilter\r\n          filterName={state.filter}\r\n          onChangeFilter={handleChangeFilter}\r\n        />\r\n        <PhonebookList\r\n          onDeleteContacts={deleteContacts}\r\n          contacts={filteredContacts}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Phonebook","import React from \"react\";\r\nimport Phonebook from \"./components/Phonebook/Phonebook\"\r\n\r\n\r\nfunction App() {\r\n    return (\r\n      <div>\r\n        <Phonebook />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}